version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: orderspoc-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersPocDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - orderspoc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: orderspoc-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - orderspoc-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: ../../src
      dockerfile: OrdersPoc.Worker/Dockerfile
    container_name: orderspoc-worker
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ordersPocDb;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__QueueName=pedidos-queue
    networks:
      - orderspoc-network
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  orderspoc-network:
    driver: bridge
