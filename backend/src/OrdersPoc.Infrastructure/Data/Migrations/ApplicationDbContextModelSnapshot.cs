// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrdersPoc.Infrastructure.Data;

#nullable disable

namespace OrdersPoc.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrdersPoc.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AtualizadoEm");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("Cep");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Cidade");

                    b.Property<string>("CpfCnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("CpfCnpj");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CriadoEm");

                    b.Property<string>("Endereco")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("Endereco");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("Estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Telefone");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("TipoPessoa");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_Clientes_Ativo");

                    b.HasIndex("CpfCnpj")
                        .HasDatabaseName("IX_Clientes_CpfCnpj");

                    b.ToTable("Clientes", "public");
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AtualizadoEm");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid")
                        .HasColumnName("ClienteId");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CriadoEm");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataPedido");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NumeroPedido");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Observacoes");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .HasDatabaseName("IX_Pedidos_ClienteId");

                    b.HasIndex("DataPedido")
                        .HasDatabaseName("IX_Pedidos_DataPedido");

                    b.HasIndex("NumeroPedido")
                        .IsUnique()
                        .HasDatabaseName("IX_Pedidos_NumeroPedido");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Pedidos_Status");

                    b.ToTable("Pedidos", "public");
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AtualizadoEm");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CriadoEm");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid")
                        .HasColumnName("PedidoId");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Produto");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .HasDatabaseName("IX_PedidoItens_PedidoId");

                    b.ToTable("PedidoItens", "public");
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.Cliente", b =>
                {
                    b.OwnsOne("OrdersPoc.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("Email");

                            b1.HasKey("ClienteId");

                            b1.HasIndex("Address")
                                .IsUnique()
                                .HasDatabaseName("IX_Clientes_Email");

                            b1.ToTable("Clientes", "public");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("OrdersPoc.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("OrdersPoc.Domain.ValueObjects.Money", "ValorTotal", b1 =>
                        {
                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ValorTotal");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)")
                                .HasDefaultValue("BRL")
                                .HasColumnName("Moeda");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos", "public");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("ValorTotal")
                        .IsRequired();
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.PedidoItem", b =>
                {
                    b.HasOne("OrdersPoc.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("OrdersPoc.Domain.ValueObjects.Money", "PrecoUnitario", b1 =>
                        {
                            b1.Property<Guid>("PedidoItemId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PrecoUnitario");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)")
                                .HasDefaultValue("BRL")
                                .HasColumnName("MoedaPreco");

                            b1.HasKey("PedidoItemId");

                            b1.ToTable("PedidoItens", "public");

                            b1.WithOwner()
                                .HasForeignKey("PedidoItemId");
                        });

                    b.OwnsOne("OrdersPoc.Domain.ValueObjects.Money", "Subtotal", b1 =>
                        {
                            b1.Property<Guid>("PedidoItemId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Subtotal");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)")
                                .HasDefaultValue("BRL")
                                .HasColumnName("MoedaSubtotal");

                            b1.HasKey("PedidoItemId");

                            b1.ToTable("PedidoItens", "public");

                            b1.WithOwner()
                                .HasForeignKey("PedidoItemId");
                        });

                    b.Navigation("Pedido");

                    b.Navigation("PrecoUnitario")
                        .IsRequired();

                    b.Navigation("Subtotal")
                        .IsRequired();
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("OrdersPoc.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
